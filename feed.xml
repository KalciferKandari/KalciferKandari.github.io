<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kalcifer Kandari</title>
    <description></description>
    <link>kalciferkandari.github.io/</link>
    <atom:link href="kalciferkandari.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Mar 2016 17:17:51 +0000</pubDate>
    <lastBuildDate>Sun, 06 Mar 2016 17:17:51 +0000</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>About</title>
        <description>&lt;h1 id=&quot;about&quot;&gt;About&lt;/h1&gt;

&lt;p&gt;TODO&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Mar 2016 13:15:00 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/about.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/about.html</guid>
        
        
      </item>
    
      <item>
        <title>Website Engine Outline 0.1.0</title>
        <description>
&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;command + up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control + up&lt;/code&gt; to come back to the table of contents.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;1. Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#display-engine&quot; id=&quot;markdown-toc-display-engine&quot;&gt;2. Display Engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#server-engine&quot; id=&quot;markdown-toc-server-engine&quot;&gt;3. Server Engine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data-storage-engine&quot; id=&quot;markdown-toc-data-storage-engine&quot;&gt;4. Data Storage Engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;1. Introduction&lt;/h2&gt;

&lt;p&gt;Working on the architecture of a website engine. This is the first rough conceptual outline, consider it draft 1. So far it has several parts, namely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#display-engine&quot;&gt;The display engine&lt;/a&gt;, which displays the website in the clientâ€™s browser.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#server-engine&quot;&gt;The server engine&lt;/a&gt;, which handles requests.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data-storage-engine&quot;&gt;The data storage engine&lt;/a&gt;, which stores and retrieves data in an efficient way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;display-engine&quot;&gt;2. Display Engine&lt;/h2&gt;

&lt;p&gt;A new display engine is necessary because currently websites have subtle problems that are overlooked. These include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sending of a lot of redundant information, such as information that is already on the current page, which wastes bandwidth, and time.&lt;/li&gt;
  &lt;li&gt;Allowing the building or progressive loading to be seen by the user. This causes problems, such as the user trying to click a link that has loaded, but it being moved once the loading of other content is done, often causing the user to click a different link.&lt;/li&gt;
  &lt;li&gt;The webpage displaying stale information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To fix these problems pages are not stored contiguously, each part of content is stored separately so any part can use any other part. Everything has an identifier (ID), every part of a page, and every collection of IDs references parts, such as pages. Parts of pages are stored separately, and the main types of parts that make up pages are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Markdown (DMD), for content.&lt;/strong&gt;&lt;br /&gt;
This is how the structure of any content of pages is written, and is stored in a similar way. Instead of using extraneous HTML, content is stored without it separately. This allows layout to be applied to content later as DLSs. Content references the DSS, DE, and DLS it uses.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Style Sheets (DSS), for style.&lt;/strong&gt;&lt;br /&gt;
DSS is somewhat like Cascading Style Sheets (CSS), except it can directly reference functionality of DJS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Display JavaScript (DJS), for dynamic display.&lt;/strong&gt;&lt;br /&gt;
This is used specifically with DSS and with it effectively forms more powerful CSS that can change at runtime.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Events (DE), for actions.&lt;/strong&gt;&lt;br /&gt;
This is JavaScript that defines what something does when used. How these events are incorporated with other events on the page is to be decided.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Layout Sheets (DLS), for layout.&lt;/strong&gt;&lt;br /&gt;
DLS determines how content is laid out on the page, effectively converting it into HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose of the display engine is to determine how content is to be presented and controlled by the user.&lt;/p&gt;

&lt;p&gt;The display engine is made up of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Loader.&lt;/strong&gt;&lt;br /&gt;
The loader controls, using DJS that is associated a particular structure element, how to load and unload the page, including individual parts, and what order to do so.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cacher.&lt;/strong&gt;&lt;br /&gt;
Caches things, such as information that is frequently being used, but not necessarily all the time.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DSS parser.&lt;/strong&gt;&lt;br /&gt;
This converts DSS to CSS&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DJS parser.&lt;/strong&gt;&lt;br /&gt;
Incorporates DJS into the main JavaScript.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DE parser.&lt;/strong&gt;&lt;br /&gt;
Incorporates DE into the main JavaScript.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DMD and DLS/Content parser.&lt;/strong&gt;&lt;br /&gt;
This converts content as DMD to HTML using DLS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Communicator.&lt;/strong&gt;&lt;br /&gt;
The communicator handles connections with the server, and what ever else is connected to the page, which could be a WebRTC connection to a peer. Communication is always done with events, which are effectively commands, using socket.io for TCP connections, and WebRTC for UDP connections, including with the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;server-engine&quot;&gt;3. Server Engine&lt;/h2&gt;

&lt;p&gt;The server engine handles requests from the client engine, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data requests, which are forwarded to the data storage engine, which may be on the same machine or another server, consolidates the returned data to be sent to the client.&lt;/li&gt;
  &lt;li&gt;Application requests, where the server engine processes some information.&lt;/li&gt;
  &lt;li&gt;Request routing, where the server workloads are distributed to different servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Technically there is no distinction between data requests and application requests, as the data storage engine is an application. Everything that is sent across any network is just an event, which is a glorified command. All requests are the same.&lt;br /&gt;
The serve engine just manages events, which is also essentially what the display engine does, and they may end-up being the same thing. The thing that distinguishes them is the event handlers.&lt;/p&gt;

&lt;p&gt;Node.js is used on the server for effective asynchronous IO, and parity with the client, where it will be possible to have handlers run on both the client and the server.&lt;/p&gt;

&lt;h2 id=&quot;data-storage-engine&quot;&gt;4. Data Storage Engine&lt;/h2&gt;

&lt;p&gt;Data storage is essentially used instead of a filesystem so only the information that is required is sent. As such, the parts of webpages are stored separately and indexed.&lt;/p&gt;

&lt;p&gt;As nothing is assumed of data storage, other than the storage of data itself, basic properties are required:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Searchability, using indexes.&lt;/strong&gt;&lt;br /&gt;
Entry lookups need to be fast, and as such, have as few reads from disk as possible. This is done with indexes, which are essentially maps of the data that may be spread across different servers, and are usually held in memory. Indexes, being entries themselves, can also be indexed, creating the possibility of index routing to find data in highly distributed, extremely large data sets.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Consistency, using transactions.&lt;/strong&gt;&lt;br /&gt;
All the data must remain consistent. Such as indexes remaining accurate with respect to the data itself, and the same data in more than one server being synchronised. Changes are not committed the information exists in non-volatile memory in all the locations.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Segmentability, using sharding.&lt;/strong&gt;&lt;br /&gt;
The database files themselves must be splittable and redistributable across many servers in order to manage workload of those servers without high overhead.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Redundancy, using duplication and transactions.&lt;/strong&gt;&lt;br /&gt;
In order to have backups, duplication and synchronisation of data is imperative to avoid loss of data. This is done by duplication of data with guaranteed consistency.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Burden balancing, using data routing.&lt;/strong&gt;&lt;br /&gt;
Different servers may happen to be dealing with data with different demand, those under high workload should not be put under additional stress, and may also have burden relieved by having part of its data moved to a less stressed server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entries are stored as JSON where each object holds 1 isolated piece of information, and references to associated data. Indexes may only contain references, and of these entries, indexes have domain hierarchies to resolve large ranges of reference quickly. Entries are allocated a server based on how much burden servers are under, where the precise location is known by indexes.&lt;br /&gt;
Entries can be an arbitrary length of bytes, and free space is mapped using indexes.&lt;/p&gt;

&lt;p&gt;Files part of the larger data storage engine, can only be made longer without reading and then writing the entire file to disk, which is a limitation of filesystems. As much as it would be convenient to have every entry in a separate file, this comes with some expensive overhead, such as additional meta data and indexing of the filesystem by the operating system, and as such there is additional time for the filesystem to find the entry on top of the time it already takes the data storage engine to find it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to see more, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;This article is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 23:54:09 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/29/website-engine-outline.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/29/website-engine-outline.html</guid>
        
        
      </item>
    
      <item>
        <title>Been Busy</title>
        <description>&lt;p&gt;Started a lot of projects in the past few years and not published much information on them, that is about to change. The point of this blog is to present musings mostly on technicalities. The blog will feature final papers, those should be hosted on &lt;a href=&quot;http://bioticpixels.com/&quot; title=&quot;bioticpixels.com&quot;&gt;bioticpixels.com&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A website engine in JavaScript, including the client, server, and the database.&lt;/strong&gt;&lt;br /&gt;
Websites are great, most of the time, but there are some aspects to them that are mildly annoying and should have been fixed already. Things such as those times when a page almost loads, but then loads a bit more and moves a link you are about to press just a enough for you to click a different one. And the fact that most website send the parts of the webpage that donâ€™t change with every request. Small things that take a lot of effort to fix. More about these intricacies in an &lt;a href=&quot;/articles/2016/02/29/website-engine-outline.html&quot;&gt;another post&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A game engine.&lt;/strong&gt;&lt;br /&gt;
Games are great, not that much of the time actually, most are in denial or do things inefficiently. They are in denial because many donâ€™t present what is the case, such as â€˜hit boxesâ€™ being different from models, or trying to have humanoids as characters, but not animating or simulating them well. They are inefficient because at the cost of scale they priorities excessive polygon counts for severely diminishing returns to enjoyment, or hold information of objects that cannot even be seen. Subtle things that take a lot of effort to fix. More about these intricacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A highly modular application/operating system engine.&lt;/strong&gt;&lt;br /&gt;
Applications and operating systems are great, none of the time, they are archaic. Applications are incredibly insecure, mostly custom written per application, and not cross-platform, what year is this? Insecurity extends to operating systems, applications are rarely properly sandboxed and have almost unlimited power in the system, the fact that applications donâ€™t exploit that power is mostly the obedience of honour rules. Custom written, and users not having control of what the application does on a code-level? Many donâ€™t even allow the rebinding of hot-keys, never mind having main application functionality as modules. Major problems that take a lot of effort to fix. More about these glaring inadequacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A hybrid 3D comic/animation.&lt;/strong&gt;&lt;br /&gt;
Movies and books are great, sometimes. They usually completely void the concept on tension and suspense by having immortal protagonists, and using clichÃ©s that telegraph what is going to happen next. Many glorify violence and battle without ever touching on the brutal consequences, war isnâ€™t Hell, war is the Devilâ€™s Heaven. Anything can happen at any time, there are no laws but the laws of physics, this should be shown. More about these inconsistencies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A topological data redistribution library.&lt;/strong&gt;&lt;br /&gt;
Decimating the surface in a meaningful way is great, itâ€™s not done well though. Itâ€™s slow, inconsistent, and ineffective, especially on large amounts of data. More about these intricacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A book.&lt;/strong&gt;&lt;br /&gt;
More on the flaws of movies and books, making up for the disappointment of super heroes and the oversight of their powers. More about these intricacies in another post.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to see more, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;This article is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 20:03:07 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/29/been-busy.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/29/been-busy.html</guid>
        
        
      </item>
    
      <item>
        <title>ICIRA</title>
        <description>
&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;command + up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control + up&lt;/code&gt; to come back to the table of contents.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;1. Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#computer-readable-standardised-licensing-agreements&quot; id=&quot;markdown-toc-computer-readable-standardised-licensing-agreements&quot;&gt;2. Computer-Readable Standardised Licensing Agreements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#copyright-license-enforcement&quot; id=&quot;markdown-toc-copyright-license-enforcement&quot;&gt;3. Copyright License Enforcement&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#paid-proof-of-publication&quot; id=&quot;markdown-toc-paid-proof-of-publication&quot;&gt;3.1. Paid Proof of Publication&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#paid-content-match-detection&quot; id=&quot;markdown-toc-paid-content-match-detection&quot;&gt;3.2. Paid Content Match Detection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#high-stakes-copyright-dispute-mediation&quot; id=&quot;markdown-toc-high-stakes-copyright-dispute-mediation&quot;&gt;3.3. High Stakes Copyright Dispute Mediation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#paid-class-action-lawsuits&quot; id=&quot;markdown-toc-paid-class-action-lawsuits&quot;&gt;3.4. Paid Class Action Lawsuits&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-site-wide-copyright-regulation&quot; id=&quot;markdown-toc-paid-site-wide-copyright-regulation&quot;&gt;4. Paid Site-Wide Copyright Regulation&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#license-verification&quot; id=&quot;markdown-toc-license-verification&quot;&gt;4.1. License Verification&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#settlement-terms-enforcement&quot; id=&quot;markdown-toc-settlement-terms-enforcement&quot;&gt;4.2. Settlement Terms Enforcement&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#proof-of-upload&quot; id=&quot;markdown-toc-proof-of-upload&quot;&gt;4.2.1. Proof of Upload&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#proof-of-revenue&quot; id=&quot;markdown-toc-proof-of-revenue&quot;&gt;4.2.2. Proof of Revenue&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#user-requirements&quot; id=&quot;markdown-toc-user-requirements&quot;&gt;4.3. User Requirements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#terms-infringement-fine&quot; id=&quot;markdown-toc-terms-infringement-fine&quot;&gt;4.4. Terms Infringement Fine&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot; id=&quot;markdown-toc-conclusion&quot;&gt;5. Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;1. Introduction&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This was not written by a lawyer. This is a speculative proposal and may not have any legal or practical merit. Skepticism is advised.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is an idea for a proposal for an unofficial industry governing body providing centralised computer-readable Internet copyright licensing creation, proof, detection, dispute, and site-wide regulation, as a convenient substitute to a full DMCA claim for the same case with regards to speed and cost.&lt;/p&gt;

&lt;p&gt;The system would consist of 3 parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#computer-readable-standardised-licensing-agreements&quot;&gt;2. Computer-Readable Standardised Licensing Agreements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#copyright-license-enforcement&quot;&gt;3. Copyright License Enforcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paidsite-wide-copyright-regulation&quot;&gt;4. Paid Site-wide Copyright Regulation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;computer-readable-standardised-licensing-agreements&quot;&gt;2. Computer-Readable Standardised Licensing Agreements&lt;/h2&gt;

&lt;p&gt;These are standardised public Internet computer-readable licenses that the ICIRA can verify the legitimacy of in a court case. They include agreements between 2 or more verified parties, publicly available paid licenses, declarations of fair use, and guaranteed means of legitimate attribution.&lt;/p&gt;

&lt;p&gt;The computer-readability means that these licenses can automatically be cross-checked upon positive automatic content match, which largely avoids the false-positives of such systems.&lt;/p&gt;

&lt;h2 id=&quot;copyright-license-enforcement&quot;&gt;3. Copyright License Enforcement&lt;/h2&gt;

&lt;p&gt;These are services for copyright holders, and include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-proof-of-publication&quot;&gt;3.1. Paid Proof of Publication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-content-match-detection&quot;&gt;3.2. Paid Content Match Detection&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#high-stakes-copyright-dispute-mediation&quot;&gt;3.3. High Stakes Copyright Dispute Mediation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-class-action-lawsuits&quot;&gt;3.4. Paid Class Action Lawsuits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;paid-proof-of-publication&quot;&gt;3.1. Paid Proof of Publication&lt;/h3&gt;

&lt;p&gt;This provides a strong means to defend works against accusations of copyright infringement. It is not proof of copyright, it may only be used as evidence.&lt;/p&gt;

&lt;h3 id=&quot;paid-content-match-detection&quot;&gt;3.2. Paid Content Match Detection&lt;/h3&gt;

&lt;p&gt;Either on a single instance basis, or periodically against new uploads. This provides a means to determine whether other works in the depository infringe using automatic content matching, which includes works that sites have given the ICIRA access to, which is part of the regulatory agreement.&lt;/p&gt;

&lt;h3 id=&quot;high-stakes-copyright-dispute-mediation&quot;&gt;3.3. High Stakes Copyright Dispute Mediation&lt;/h3&gt;

&lt;p&gt;The accusing party, herein referred to as â€˜the accuserâ€™, pays a sum of money to have a dispute mediated by a human associated with the ICIRA. This is only with works uploaded on regulated sites, as it requires compliance by the host platform.&lt;/p&gt;

&lt;p&gt;The uploader of the material in question, whom must be a member of a regulated site where the work was uploaded, can either participate, or refuse and possibly be subject to a DMCA claim made by the ICIRA on behalf of the accuser, if the user pays or has insurance with the ICIRA. Even if the uploader agrees to participate, they are still under no obligation, and are not legally bound to the decisions made by the ICIRA unless a settlement is reached and an agreement signed.&lt;/p&gt;

&lt;p&gt;If the uploader agrees to participate and wins, then the accuser must, by a legal agreement with the ICIRA, pay the uploader inconvenience damages, and a fine for to the ICIRA for filing a false claim.&lt;/p&gt;

&lt;p&gt;If the accuser wins, the most the ICIRA will enforce is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All revenue made by the host platform must be transferred to the accuser by the host platform.&lt;/li&gt;
  &lt;li&gt;The cost of hosting the infringing material on the host platform must be paid by the uploader to the host platform by the uploader.&lt;/li&gt;
  &lt;li&gt;The cost of mediating the dispute the accuser originally paid to the accuser by the uploader.&lt;/li&gt;
  &lt;li&gt;Any other damages to either the accuser and the host platform by the uploader.&lt;/li&gt;
  &lt;li&gt;Both the accuser and uploader also surrender their ability to pursue the same case as an official DMCA claim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There may be other settlements, such as paying any revenue the uploader has made so far and signing a licensing agreement for example.&lt;/p&gt;

&lt;p&gt;If the accuser declines the settlement conditions, then the dispute is dropped and they must pay inconvenience damages to the uploader.&lt;/p&gt;

&lt;h3 id=&quot;paid-class-action-lawsuits&quot;&gt;3.4. Paid Class Action Lawsuits&lt;/h3&gt;

&lt;p&gt;Content infringement cases against unregulated websites can also be accumulated to create a break even DMCA class action lawsuit by the ICIRA on the behalf of copyright holders. This means that the infringing site would need to pay for the fees of ICIRA, and the money the participants paid, along with the revenue they earned from the infringed material, and any further damages if the case is won.&lt;/p&gt;

&lt;h2 id=&quot;paid-site-wide-copyright-regulation&quot;&gt;4. Paid Site-Wide Copyright Regulation&lt;/h2&gt;

&lt;p&gt;This provides large content platforms to mitigate the possible legal problems associated with publishing content on the Internet on their usersâ€™ behalf, and could be considered copyright insurance. A certificate could also be provided by the ICIRA.&lt;/p&gt;

&lt;p&gt;The requirements includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#license-verification&quot;&gt;4.1. License Verification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#settlement-terms-enforcement&quot;&gt;4.2. Settlement Terms Enforcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#user-requirements&quot;&gt;4.3. User Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#terms-infringementfine&quot;&gt;4.4. Terms Infringement Fine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;license-verification&quot;&gt;4.1. License Verification&lt;/h3&gt;

&lt;p&gt;This is only required if using a separate content match system, where if a match is found then it is referenced against a license and no further action taken unless by the accuser, which can still be notified of the match.&lt;/p&gt;

&lt;p&gt;Also, automatic takedowns are not permitted, and must always be disputed through the ICIRA or an official DMCA claim.&lt;/p&gt;

&lt;h3 id=&quot;settlement-terms-enforcement&quot;&gt;4.2. Settlement Terms Enforcement&lt;/h3&gt;

&lt;p&gt;This includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#proofofupload&quot;&gt;4.2.1. Proof of Upload&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#proofofrevenue&quot;&gt;4.2.2. Proof of Revenue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;proof-of-upload&quot;&gt;4.2.1. Proof of Upload&lt;/h4&gt;

&lt;p&gt;Regulated sites must provide a proof of upload as sufficient proof for intellectual property claims.&lt;/p&gt;

&lt;h4 id=&quot;proof-of-revenue&quot;&gt;4.2.2. Proof of Revenue&lt;/h4&gt;

&lt;p&gt;This is required to calculated accurate damages in copyright disputes by users. It is subject to a none disclosure agreement (NDA) between all parties that receive the information, which mean the conditions of the settlements will largely remain private.&lt;/p&gt;

&lt;h3 id=&quot;user-requirements&quot;&gt;4.3. User Requirements&lt;/h3&gt;

&lt;p&gt;ICIRA-user agreement before uploads are permitted on the site, including text. The agreement includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A verified account for uploads, which includes a verified bank account. It may be sufficient that the user register with the ICIRA directly, such as to remain anonymous to the host platform and for the security of bank details in the case of untrustworthy sites.&lt;/li&gt;
  &lt;li&gt;Settlement participation, subject to a fine and possible DMCA case if refused.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;terms-infringement-fine&quot;&gt;4.4. Terms Infringement Fine&lt;/h3&gt;

&lt;p&gt;Where the site agrees to pay a fine if the terms between it and the ICIRA are breached, where the regulatory certificate is also revoked.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;5. Conclusion&lt;/h2&gt;

&lt;p&gt;This would provide a means for sites, big and small, to comply with copyright law in a relatively efficient, and cheap way, and also a means for copyright holders to enforce their property in a convenient manner, possibly having a large improvement in cultural expression on the Internet. It also discourages copyright trolling by creating monetary consequences for unsuccessful claims.&lt;/p&gt;

&lt;p&gt;It should also be noted that copyright is a form of intellectual property law, and as such there must be a means to prove ownership in order to prove that someone is guilty of infringement, this being with regards to â€˜innocent until proven guiltyâ€™.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://redd.it/47bn8f&quot; title=&quot;reddit.com&quot;&gt;Comments are on Reddit&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;If you want to see more, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;This article is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 06:13:33 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/24/icira.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/24/icira.html</guid>
        
        
      </item>
    
  </channel>
</rss>

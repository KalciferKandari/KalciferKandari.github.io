<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kalcifer Kandari</title>
    <description></description>
    <link>kalciferkandari.github.io/</link>
    <atom:link href="kalciferkandari.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 05 Mar 2016 00:38:29 +0000</pubDate>
    <lastBuildDate>Sat, 05 Mar 2016 00:38:29 +0000</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>About</title>
        <description>&lt;h1 id=&quot;about&quot;&gt;About&lt;/h1&gt;

&lt;p&gt;TODO&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Mar 2016 13:15:00 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/about.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/about.html</guid>
        
        
      </item>
    
      <item>
        <title>Website Engine</title>
        <description>&lt;h1 id=&quot;website-engine&quot;&gt;Website Engine&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Written by: Kalcifer Kandari&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Date: 29 February 2016 23:54:09&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;abstract&quot;&gt;0. Abstract&lt;/h2&gt;

&lt;p&gt;Websites are great, most of the time, but there are some aspects to them that are mildly annoying and should have been fixed already. Things such as those times when a page almost loads, but then loads a bit more and moves a link you are about to press just a enough for you to click a different one. Looking at you Google.com. And the fact that most website send the parts of the webpage that don’t change with every request. Small things that take a lot of effort to fix.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;1. Table of Contents&lt;/h2&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;command + up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control + up&lt;/code&gt; to come back to the table of contents.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#website-engine&quot; id=&quot;markdown-toc-website-engine&quot;&gt;Website Engine&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#abstract&quot; id=&quot;markdown-toc-abstract&quot;&gt;0. Abstract&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot; id=&quot;markdown-toc-table-of-contents&quot;&gt;1. Table of Contents&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;2. Introduction&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#display-engine&quot; id=&quot;markdown-toc-display-engine&quot;&gt;3. Display Engine&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#server-engine&quot; id=&quot;markdown-toc-server-engine&quot;&gt;4. Server Engine&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#data-storage&quot; id=&quot;markdown-toc-data-storage&quot;&gt;5. Data Storage&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;2. Introduction&lt;/h2&gt;

&lt;p&gt;Working on the architecture of a website engine, this is the first rough conceptual outline, consider it draft 1. So far it has several parts, namely:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#display-engine&quot;&gt;The display engine&lt;/a&gt;, which displays the website in the client’s browser.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#server-engine&quot;&gt;The server engine&lt;/a&gt;, which handles requests.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data-storage-engine&quot;&gt;The data storage engine&lt;/a&gt;, which stores and retrieves data in an efficient way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;display-engine&quot;&gt;3. Display Engine&lt;/h2&gt;

&lt;p&gt;A new display engine is necessary because currently websites have subtle problems that are overlooked. These include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sending of a lot of redundant information, such as information that is already on the current page, this wastes bandwidth, and time.&lt;/li&gt;
  &lt;li&gt;Allowing the building or progressive loading to be seen by the user. This causes problems, such as the user trying to click a link that has loaded, but it being moved once the loading of other content is done, often causing the user to click another link.&lt;/li&gt;
  &lt;li&gt;The webpage displaying stale information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To fix these problems pages are not stored contiguously, each part of content is stored separately so more than any part can use any other part. Everything has an ID, every part, and every collection of parts as IDs, such as pages. Parts are stored separately, and the main types of parts that make up pages are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Markdown (DMD), for content.&lt;/strong&gt;&lt;br /&gt;
This is how the structure of any content of pages is written, and is stored in a similar way. Instead of using extraneous HTML, content is stored separately. This allows layout to be applied to content later as DLSs. Content references the DSS, DE, and DLS it uses.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Style Sheets (DSS), for style.&lt;/strong&gt;&lt;br /&gt;
DSS is somewhat like Cascading Style Sheets (CSS), except it can directly reference functionality of DJS. DSS references DJS directly.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Display JavaScript (DJS), for dynamic display.&lt;/strong&gt;&lt;br /&gt;
This is used specifically with DSS and with it effectively forms more powerful CSS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Events (DE), for actions.&lt;/strong&gt;&lt;br /&gt;
This is JavaScript that defines what something does when used. How these events are incorporated with other events on the page is to be decided.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dynamic Layout Sheets (DLS), for layout.&lt;/strong&gt;&lt;br /&gt;
DLS determines how content is laid out on the page, effectively converting it into HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose of the display engine is to determine how content is to be presented and controlled by the user.&lt;/p&gt;

&lt;p&gt;The display engine has the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Loader.&lt;/strong&gt;&lt;br /&gt;
The loader controls, using DJS that is associated a particular structure element, how to load and unload the page, including individual parts, and what order to do so.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cacher.&lt;/strong&gt;&lt;br /&gt;
Caches things, such as information that is frequently being used, but not necessarily right now.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DSS parser.&lt;/strong&gt;&lt;br /&gt;
This converts DSS to CSS&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DJS parser.&lt;/strong&gt;&lt;br /&gt;
Incorporates DJS into the main JavaScript.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DE parser.&lt;/strong&gt;&lt;br /&gt;
Incorporates DE into the main JavaScript.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DMD and DLS/Content parser.&lt;/strong&gt;&lt;br /&gt;
This converts content to HTML using DLS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Communicator.&lt;/strong&gt;&lt;br /&gt;
The communicator handles connections with the server, and what ever else is connected to the page, which could be a WebRTC connection to a peer. Communication is always done with events, which are effectively commands, using socket.io for TCP connections, and WebRTC for UDP connections, including with the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;server-engine&quot;&gt;4. Server Engine&lt;/h2&gt;

&lt;p&gt;The server engine handles requests from the client engine, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data requests, which are forwarded to the data storage engine, which may be on the same machine or another server, consolidates the returned data to be sent to the client.&lt;/li&gt;
  &lt;li&gt;Application requests, where the server engine runs code.
Request routing, where the server workloads are distributed to different servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js is used for effective asynchronous IO.&lt;/p&gt;

&lt;h2 id=&quot;data-storage&quot;&gt;5. Data Storage&lt;/h2&gt;

&lt;p&gt;Engine Data storage is essentially used instead of a filesystem so only the information that is required is sent. As such, the parts of webpages are stored separately and indexed.&lt;/p&gt;

&lt;p&gt;As nothing is assumed of data storage, other than the storage of data itself, basic properties are required:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Searchability, using indexes.&lt;/strong&gt;&lt;br /&gt;
Entry lookups need to be fast, and as such, have as few reads from disk as possible. This is done with indexing, which are essentially maps of the data, that may be spread across different servers, and are usually held in memory. Indexes, being entries themselves, can also be indexed, creating the possibility of index routing to find data in highly distributed, extremely large data sets.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Consistency, using transactions.&lt;/strong&gt;&lt;br /&gt;
All the data must remain consistent. Such as indexes remaining accurate with respect to the data itself, and the same data in more than one server being synchronised.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Segmentability, using sharding.&lt;/strong&gt;&lt;br /&gt;
The database files themselves must be splittable and redistributable across many servers in order to manage workload.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Redundancy, using duplication and transactions.&lt;/strong&gt;&lt;br /&gt;
In order to have backups, duplication and synchronisation of data is imperative to avoid loss of data. This is done by duplication of data with guaranteed consistency.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Burden fairness, using data routing.&lt;/strong&gt;
Different servers may happen to be dealing with data with different amounts of demand, those under high workload should not be put under additional stress, and may also have burden relieved by having part of its data moved or duplicated to a less stressed server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entries are stored as JSON where each object holds 1 isolated piece of information, and references to associated data. Entries may only contain references, and of these entries, indexes have domain hierarchies to resolve large ranges of reference quickly. Entries are allocated a server based on how much burden servers are under, where the precise location is known by indexes.&lt;br /&gt;
Entries can be an arbitrary length of bytes, and free space is mapped using indexes.&lt;/p&gt;

&lt;p&gt;Databases, which are individual files part of the larger data storage engine, can only be made longer without reading and then writing the entire file to disk. This is a limitation of filesystems. As much as it would be convenient to have every entry in a separate file, this comes with some expensive overhead, such as addition meta data and indexing of the filesystem by the operating system, and as such the additional time it takes for the filesystem to find the entry on top of the time it takes the data storage engine to find it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoyed it, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;It is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 23:54:09 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/29/website-engine.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/29/website-engine.html</guid>
        
        
      </item>
    
      <item>
        <title>Been Busy</title>
        <description>&lt;h1 id=&quot;been-busy&quot;&gt;Been Busy&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Written by: Kalcifer Kandari&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Date: 29 February 2016 20:03:07&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Started a lot of projects in the past few years and not published much information on them, that is about to change. The point of this blog is to present musings mostly on technicalities of the work of Kalcifer Kandari.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A website engine in JavaScript, including the client, server, and the database.&lt;/strong&gt;&lt;br /&gt;
Websites are great, most of the time, but there are some aspects to them that are mildly annoying and should have been fixed already. Things such as those times when a page almost loads, but then loads a bit more and moves a link you are about to press just a enough for you to click a different one. Looking at you Google.com. And the fact that most website send the parts of the webpage that don’t change with every request. Small things that take a lot of effort to fix. More about these intricacies an another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A game engine.&lt;/strong&gt;&lt;br /&gt;
Games are great, not that much of the time actually, most are in denial or do things inefficiently. They are in denial because many don’t present what is the case, such as ‘hit boxes’ being different from models, or trying to have humanoids as characters, but not animating or simulating them well. They are inefficient because at the cost of scale they priorities excessive polygon counts for severely diminishing returns to enjoyment, or hold information of objects that cannot even be seen. Subtle things that take a lot of effort to fix. More about these intricacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A highly modular application/operating system engine.&lt;/strong&gt;
Applications and operating systems are great, none of the time, they are archaic. Applications are incredibly insecure, mostly custom written per application, and not cross-platform, what year is this? Insecurity extends to operating systems, applications are rarely properly sandboxed and have almost unlimited power in the system, the fact that applications don’t exploit that power is mostly the obedience of honour rules. Custom written, and users not having control of what the application does on a code-level? Many don’t even allow the rebinding of hot-keys, never mind having main application functionality as modules. Major problems that take a lot of effort to fix. More about these glaring inadequacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A hybrid 3D comic/animation.&lt;/strong&gt;&lt;br /&gt;
Movies and books are great, sometimes. They usually completely void the concept on tension and suspense by having immortal protagonists, and using clichés that telegraph what is going to happen next. Many glorify violence and battle without ever touching on the brutal consequences, war isn’t Hell, war is the Devil’s Heaven. Anything can happen at any time, there are no laws but the laws of physics, this should be shown. More about these inconsistencies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A topological data redistribution library.&lt;/strong&gt;&lt;br /&gt;
Decimating the surface in a meaningful way is great, it’s not done well though. It’s slow, inconsistent, and ineffective, especially on large amounts of data. More about these intricacies in another post.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A book.&lt;/strong&gt;&lt;br /&gt;
More on the flaws of movies and books, making up for the disappointment of super heroes and the oversight of their powers. More about these intricacies in another post.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoyed it, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;It is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 20:03:07 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/29/been-busy.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/29/been-busy.html</guid>
        
        
      </item>
    
      <item>
        <title>ICIRA</title>
        <description>&lt;h1 id=&quot;a-proposal-for-the-formation-of-the-internet-copyright-insurance-and-regulation-association-icira&quot;&gt;A Proposal for the Formation of The Internet Copyright Insurance and Regulation Association (ICIRA)&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Written by: Kalcifer Kandari&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;Date: 24 February 2016 06:13:33&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;abstract&quot;&gt;0. Abstract&lt;/h2&gt;

&lt;p&gt;An idea for a proposal for an unofficial industry governing body providing centralised computer-readable Internet copyright licensing creation, proof, detection, dispute, and site-wide regulation.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;1. Table of Contents&lt;/h2&gt;

&lt;p&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;command + up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;control + up&lt;/code&gt; to come back to the table of contents.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#a-proposal-for-the-formation-of-the-internet-copyright-insurance-and-regulation-association-icira&quot; id=&quot;markdown-toc-a-proposal-for-the-formation-of-the-internet-copyright-insurance-and-regulation-association-icira&quot;&gt;A Proposal for the Formation of The Internet Copyright Insurance and Regulation Association (ICIRA)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#abstract&quot; id=&quot;markdown-toc-abstract&quot;&gt;0. Abstract&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot; id=&quot;markdown-toc-table-of-contents&quot;&gt;1. Table of Contents&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;2. Introduction&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#computer-readable-standardised-licensing-agreements&quot; id=&quot;markdown-toc-computer-readable-standardised-licensing-agreements&quot;&gt;3. Computer-Readable Standardised Licensing Agreements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#copyright-license-enforcement&quot; id=&quot;markdown-toc-copyright-license-enforcement&quot;&gt;4. Copyright License Enforcement&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#paid-proof-of-publication&quot; id=&quot;markdown-toc-paid-proof-of-publication&quot;&gt;4.1. Paid Proof of Publication&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#paid-content-match-detection&quot; id=&quot;markdown-toc-paid-content-match-detection&quot;&gt;4.2. Paid Content Match Detection&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#high-stakes-copyright-dispute-mediation&quot; id=&quot;markdown-toc-high-stakes-copyright-dispute-mediation&quot;&gt;4.3. High Stakes Copyright Dispute Mediation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#paid-class-action-lawsuits&quot; id=&quot;markdown-toc-paid-class-action-lawsuits&quot;&gt;4.4. Paid Class Action Lawsuits&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#paid-site-wide-copyright-regulation&quot; id=&quot;markdown-toc-paid-site-wide-copyright-regulation&quot;&gt;5. Paid Site-Wide Copyright Regulation&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#license-verification&quot; id=&quot;markdown-toc-license-verification&quot;&gt;5.1. License Verification&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#settlement-terms-enforcement&quot; id=&quot;markdown-toc-settlement-terms-enforcement&quot;&gt;5.2. Settlement Terms Enforcement&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#proof-of-upload&quot; id=&quot;markdown-toc-proof-of-upload&quot;&gt;5.2.1. Proof of Upload&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#proof-of-revenue&quot; id=&quot;markdown-toc-proof-of-revenue&quot;&gt;5.2.2. Proof of Revenue&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#user-requirements&quot; id=&quot;markdown-toc-user-requirements&quot;&gt;5.3. User Requirements&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#terms-infringement-fine&quot; id=&quot;markdown-toc-terms-infringement-fine&quot;&gt;5.4. Terms Infringement Fine&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#conclusion&quot; id=&quot;markdown-toc-conclusion&quot;&gt;6. Conclusion&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;2. Introduction&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This was not written by a lawyer. This is a speculative proposal and may not have any legal or practical merit. Skepticism is advised.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is an idea for a proposal for an unofficial industry governing body providing centralised computer-readable Internet copyright licensing creation, proof, detection, dispute, and site-wide regulation, as a convenient substitute to a full DMCA claim for the same case with regards to speed and cost.&lt;/p&gt;

&lt;p&gt;The system would consist of 3 parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#computer-readable-standardised-licensing-agreements&quot;&gt;3. Computer-Readable Standardised Licensing Agreements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#copyright-license-enforcement&quot;&gt;4. Copyright License Enforcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paidsite-wide-copyright-regulation&quot;&gt;5. Paid Site-wide Copyright Regulation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;computer-readable-standardised-licensing-agreements&quot;&gt;3. Computer-Readable Standardised Licensing Agreements&lt;/h2&gt;

&lt;p&gt;These are standardised public Internet computer-readable licenses that the ICIRA can verify the legitimacy of in a court case. They include agreements between 2 or more verified parties, publicly available paid licenses, declarations of fair use, and guaranteed means of legitimate attribution.&lt;/p&gt;

&lt;p&gt;The computer-readability means that these licenses can automatically be cross-checked upon positive automatic content match, which largely avoids the false-positives of such systems.&lt;/p&gt;

&lt;h2 id=&quot;copyright-license-enforcement&quot;&gt;4. Copyright License Enforcement&lt;/h2&gt;

&lt;p&gt;These are services for copyright holders, and include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-proof-of-publication&quot;&gt;4.1. Paid Proof of Publication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-content-match-detection&quot;&gt;4.2. Paid Content Match Detection&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#high-stakes-copyright-dispute-mediation&quot;&gt;4.3. High Stakes Copyright Dispute Mediation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paid-class-action-lawsuits&quot;&gt;4.4. Paid Class Action Lawsuits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;paid-proof-of-publication&quot;&gt;4.1. Paid Proof of Publication&lt;/h3&gt;

&lt;p&gt;This provides a strong means to defend works against accusations of copyright infringement. It is not proof of copyright, it may only be used as evidence.&lt;/p&gt;

&lt;h3 id=&quot;paid-content-match-detection&quot;&gt;4.2. Paid Content Match Detection&lt;/h3&gt;

&lt;p&gt;Either on a single instance basis, or periodically against new uploads. This provides a means to determine whether other works in the depository infringe using automatic content matching, which includes works that sites have given the ICIRA access to, which is part of the regulatory agreement.&lt;/p&gt;

&lt;h3 id=&quot;high-stakes-copyright-dispute-mediation&quot;&gt;4.3. High Stakes Copyright Dispute Mediation&lt;/h3&gt;

&lt;p&gt;The accusing party, herein referred to as ‘the accuser’, pays a sum of money to have a dispute mediated by a human associated with the ICIRA. This is only with works uploaded on regulated sites, as it requires compliance by the host platform.&lt;/p&gt;

&lt;p&gt;The uploader of the material in question, whom must be a member of a regulated site where the work was uploaded, can either participate, or refuse and possibly be subject to a DMCA claim made by the ICIRA on behalf of the accuser, if the user pays or has insurance with the ICIRA. Even if the uploader agrees to participate, they are still under no obligation, and are not legally bound to the decisions made by the ICIRA unless a settlement is reached and an agreement signed.&lt;/p&gt;

&lt;p&gt;If the uploader agrees to participate and wins, then the accuser must, by a legal agreement with the ICIRA, pay the uploader inconvenience damages, and a fine for to the ICIRA for filing a false claim.&lt;/p&gt;

&lt;p&gt;If the accuser wins, the most the ICIRA will enforce is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All revenue made by the host platform must be transferred to the accuser by the host platform.&lt;/li&gt;
  &lt;li&gt;The cost of hosting the infringing material on the host platform must be paid by the uploader to the host platform by the uploader.&lt;/li&gt;
  &lt;li&gt;The cost of mediating the dispute the accuser originally paid to the accuser by the uploader.&lt;/li&gt;
  &lt;li&gt;Any other damages to either the accuser and the host platform by the uploader.&lt;/li&gt;
  &lt;li&gt;Both the accuser and uploader also surrender their ability to pursue the same case as an official DMCA claim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There may be other settlements, such as paying any revenue the uploader has made so far and signing a licensing agreement for example.&lt;/p&gt;

&lt;p&gt;If the accuser declines the settlement conditions, then the dispute is dropped and they must pay inconvenience damages to the uploader.&lt;/p&gt;

&lt;h3 id=&quot;paid-class-action-lawsuits&quot;&gt;4.4. Paid Class Action Lawsuits&lt;/h3&gt;

&lt;p&gt;Content infringement cases against unregulated websites can also be accumulated to create a break even DMCA class action lawsuit by the ICIRA on the behalf of copyright holders. This means that the infringing site would need to pay for the fees of ICIRA, and the money the participants paid, along with the revenue they earned from the infringed material, and any further damages if the case is won.&lt;/p&gt;

&lt;h2 id=&quot;paid-site-wide-copyright-regulation&quot;&gt;5. Paid Site-Wide Copyright Regulation&lt;/h2&gt;

&lt;p&gt;This provides large content platforms to mitigate the possible legal problems associated with publishing content on the Internet on their users’ behalf, and could be considered copyright insurance. A certificate could also be provided by the ICIRA.&lt;/p&gt;

&lt;p&gt;The requirements includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#license-verification&quot;&gt;5.1. License Verification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#settlement-terms-enforcement&quot;&gt;5.2. Settlement Terms Enforcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#user-requirements&quot;&gt;5.3. User Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#terms-infringementfine&quot;&gt;5.4. Terms Infringement Fine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;license-verification&quot;&gt;5.1. License Verification&lt;/h3&gt;

&lt;p&gt;This is only required if using a separate content match system, where if a match is found then it is referenced against a license and no further action taken unless by the accuser, which can still be notified of the match.&lt;/p&gt;

&lt;p&gt;Also, automatic takedowns are not permitted, and must always be disputed through the ICIRA or an official DMCA claim.&lt;/p&gt;

&lt;h3 id=&quot;settlement-terms-enforcement&quot;&gt;5.2. Settlement Terms Enforcement&lt;/h3&gt;

&lt;p&gt;This includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#proofofupload&quot;&gt;5.2.1. Proof of Upload&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#proofofrevenue&quot;&gt;5.2.2. Proof of Revenue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;proof-of-upload&quot;&gt;5.2.1. Proof of Upload&lt;/h4&gt;

&lt;p&gt;Regulated sites must provide a proof of upload as sufficient proof for intellectual property claims.&lt;/p&gt;

&lt;h4 id=&quot;proof-of-revenue&quot;&gt;5.2.2. Proof of Revenue&lt;/h4&gt;

&lt;p&gt;This is required to calculated accurate damages in copyright disputes by users. It is subject to a none disclosure agreement (NDA) between all parties that receive the information, which mean the conditions of the settlements will largely remain private.&lt;/p&gt;

&lt;h3 id=&quot;user-requirements&quot;&gt;5.3. User Requirements&lt;/h3&gt;

&lt;p&gt;ICIRA-user agreement before uploads are permitted on the site, including text. The agreement includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A verified account for uploads, which includes a verified bank account. It may be sufficient that the user register with the ICIRA directly, such as to remain anonymous to the host platform and for the security of bank details in the case of untrustworthy sites.&lt;/li&gt;
  &lt;li&gt;Settlement participation, subject to a fine and possible DMCA case if refused.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;terms-infringement-fine&quot;&gt;5.4. Terms Infringement Fine&lt;/h3&gt;

&lt;p&gt;Where the site agrees to pay a fine if the terms between it and the ICIRA are breached, where the regulatory certificate is also revoked.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;6. Conclusion&lt;/h2&gt;

&lt;p&gt;This would provide a means for sites, big and small, to comply with copyright law in a relatively efficient, and cheap way, and also a means for copyright holders to enforce their property in a convenient manner, possibly having a large improvement in cultural expression on the Internet. It also discourages copyright trolling by creating monetary consequences for unsuccessful claims.&lt;/p&gt;

&lt;p&gt;It should also be noted that copyright is a form of intellectual property law, and as such there must be a means to prove ownership in order to prove that someone is guilty of infringement, this being with regards to ‘innocent until proven guilty’.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to comment on this article &lt;a href=&quot;https://redd.it/47bn8f&quot; title=&quot;reddit.com&quot;&gt;it was posted on Reddit&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;If you enjoyed it, please consider &lt;a href=&quot;bioticpixels.com/supporting&quot; title=&quot;Supporting Biotic Pixels&quot;&gt;donating&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;It is hosted on &lt;a href=&quot;https://github.io/KalciferKandari/tree/gh-pages/articles&quot; title=&quot;Articles github.io&quot;&gt;GitHub&lt;/a&gt;. If there are any problems, open an &lt;a href=&quot;https:github.io/KalciferKandari/KalciferKandari.github.io/issues /issues&quot; title=&quot;kalciferkandari.github.io Issues github.io&quot;&gt;issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 06:13:33 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2016/02/24/icira.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2016/02/24/icira.html</guid>
        
        
      </item>
    
      <item>
        <title>Markdown Test</title>
        <description>&lt;p&gt;&lt;em&gt;This page has been taken from &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot; title=&quot;daringfireball.net&quot;&gt;Daring Fireball&lt;/a&gt; in order test the html/css of bioticpixels.com.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;markdown-syntax&quot;&gt;Markdown: Syntax&lt;/h1&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#markdown-syntax&quot; id=&quot;markdown-toc-markdown-syntax&quot;&gt;Markdown: Syntax&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot; id=&quot;markdown-toc-table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#overview&quot; id=&quot;markdown-toc-overview&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#philosophy&quot; id=&quot;markdown-toc-philosophy&quot;&gt;Philosophy&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#inline-html&quot; id=&quot;markdown-toc-inline-html&quot;&gt;Inline HTML&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#automatic-escaping-for-special-characters&quot; id=&quot;markdown-toc-automatic-escaping-for-special-characters&quot;&gt;Automatic Escaping for Special Characters&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#block-elements&quot; id=&quot;markdown-toc-block-elements&quot;&gt;Block Elements&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#paragraphs-and-line-breaks&quot; id=&quot;markdown-toc-paragraphs-and-line-breaks&quot;&gt;Paragraphs and Line Breaks&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#headers&quot; id=&quot;markdown-toc-headers&quot;&gt;Headers&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#blockquotes&quot; id=&quot;markdown-toc-blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#lists&quot; id=&quot;markdown-toc-lists&quot;&gt;Lists&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#code-blocks&quot; id=&quot;markdown-toc-code-blocks&quot;&gt;Code Blocks&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#horizontal-rules&quot; id=&quot;markdown-toc-horizontal-rules&quot;&gt;Horizontal Rules&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#span-elements&quot; id=&quot;markdown-toc-span-elements&quot;&gt;Span Elements&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#emphasis&quot; id=&quot;markdown-toc-emphasis&quot;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#code&quot; id=&quot;markdown-toc-code&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#images&quot; id=&quot;markdown-toc-images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#miscellaneous&quot; id=&quot;markdown-toc-miscellaneous&quot;&gt;Miscellaneous&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#utomatic-links&quot; id=&quot;markdown-toc-utomatic-links&quot;&gt;utomatic Links&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#backslash-escapes&quot; id=&quot;markdown-toc-backslash-escapes&quot;&gt;Backslash Escapes&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This document is itself written using Markdown; you
can &lt;a href=&quot;/projects/markdown/syntax.text&quot;&gt;see the source for it by adding ‘.text’ to the URL&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;h2 id=&quot;philosophy&quot;&gt;Philosophy&lt;/h2&gt;

&lt;p&gt;Markdown is intended to be as easy-to-read and easy-to-write as is feasible.&lt;/p&gt;

&lt;p&gt;Readability, however, is emphasized above all else. A Markdown-formatted
document should be publishable as-is, as plain text, without looking
like it’s been marked up with tags or formatting instructions. While
Markdown’s syntax has been influenced by several existing text-to-HTML
filters – including &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt;, &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;, &lt;a href=&quot;http://textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;, &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;,
&lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot;&gt;Grutatext&lt;/a&gt;, and &lt;a href=&quot;http://ettext.taint.org/doc/&quot;&gt;EtText&lt;/a&gt; – the single biggest source of
inspiration for Markdown’s syntax is the format of plain text email.&lt;/p&gt;

&lt;p&gt;To this end, Markdown’s syntax is comprised entirely of punctuation
characters, which punctuation characters have been carefully chosen so
as to look like what they mean. E.g., asterisks around a word actually
look like *emphasis*. Markdown lists look like, well, lists. Even
blockquotes look like quoted passages of text, assuming you’ve ever
used email.&lt;/p&gt;

&lt;h3 id=&quot;inline-html&quot;&gt;Inline HTML&lt;/h3&gt;

&lt;p&gt;Markdown’s syntax is intended for one purpose: to be used as a
format for &lt;em&gt;writing&lt;/em&gt; for the web.&lt;/p&gt;

&lt;p&gt;Markdown is not a replacement for HTML, or even close to it. Its
syntax is very small, corresponding only to a very small subset of
HTML tags. The idea is &lt;em&gt;not&lt;/em&gt; to create a syntax that makes it easier
to insert HTML tags. In my opinion, HTML tags are already easy to
insert. The idea for Markdown is to make it easy to read, write, and
edit prose. HTML is a &lt;em&gt;publishing&lt;/em&gt; format; Markdown is a &lt;em&gt;writing&lt;/em&gt;
format. Thus, Markdown’s formatting syntax only addresses issues that
can be conveyed in plain text.&lt;/p&gt;

&lt;p&gt;For any markup that is not covered by Markdown’s syntax, you simply
use HTML itself. There’s no need to preface it or delimit it to
indicate that you’re switching from Markdown to HTML; you just use
the tags.&lt;/p&gt;

&lt;p&gt;The only restrictions are that block-level HTML elements – e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, etc. – must be separated from surrounding
content by blank lines, and the start and end tags of the block should
not be indented with tabs or spaces. Markdown is smart enough not
to add extra (unwanted) &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.&lt;/p&gt;

&lt;p&gt;For example, to add an HTML table to a Markdown article:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is a regular paragraph.

&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Foo&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;

This is another regular paragraph.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that Markdown formatting syntax is not processed within block-level
HTML tags. E.g., you can’t use Markdown-style &lt;code class=&quot;highlighter-rouge&quot;&gt;*emphasis*&lt;/code&gt; inside an
HTML block.&lt;/p&gt;

&lt;p&gt;Span-level HTML tags – e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; – can be
used anywhere in a Markdown paragraph, list item, or header. If you
want, you can even use HTML tags instead of Markdown formatting; e.g. if
you’d prefer to use HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags instead of Markdown’s
link or image syntax, go right ahead.&lt;/p&gt;

&lt;p&gt;Unlike block-level HTML tags, Markdown syntax &lt;em&gt;is&lt;/em&gt; processed within
span-level tags.&lt;/p&gt;

&lt;h3 id=&quot;automatic-escaping-for-special-characters&quot;&gt;Automatic Escaping for Special Characters&lt;/h3&gt;

&lt;p&gt;In HTML, there are two characters that demand special treatment: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;. Left angle brackets are used to start tags; ampersands are
used to denote HTML entities. If you want to use them as literal
characters, you must escape them as entities, e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;lt;&lt;/code&gt;, and
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;amp;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ampersands in particular are bedeviling for web writers. If you want to
write about ‘AT&amp;amp;T’, you need to write ‘&lt;code class=&quot;highlighter-rouge&quot;&gt;AT&amp;amp;amp;T&lt;/code&gt;’. You even need to
escape ampersands within URLs. Thus, if you want to link to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;you need to encode the URL as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;in your anchor tag &lt;code class=&quot;highlighter-rouge&quot;&gt;href&lt;/code&gt; attribute. Needless to say, this is easy to
forget, and is probably the single most common source of HTML validation
errors in otherwise well-marked-up web sites.&lt;/p&gt;

&lt;p&gt;Markdown allows you to use these characters naturally, taking care of
all the necessary escaping for you. If you use an ampersand as part of
an HTML entity, it remains unchanged; otherwise it will be translated
into &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;amp;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, if you want to include a copyright symbol in your article, you can write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;amp;copy;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and Markdown will leave it alone. But if you write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT&amp;amp;T
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown will translate it to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT&amp;amp;amp;T
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Similarly, because Markdown supports &lt;a href=&quot;#html&quot;&gt;inline HTML&lt;/a&gt;, if you use
angle brackets as delimiters for HTML tags, Markdown will treat them as
such. But if you write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 &amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown will translate it to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 &amp;amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, inside Markdown code spans and blocks, angle brackets and
ampersands are &lt;em&gt;always&lt;/em&gt; encoded automatically. This makes it easy to use
Markdown to write about HTML code. (As opposed to raw HTML, which is a
terrible format for writing about HTML syntax, because every single &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; in your example code needs to be escaped.)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;block-elements&quot;&gt;Block Elements&lt;/h2&gt;

&lt;h3 id=&quot;paragraphs-and-line-breaks&quot;&gt;Paragraphs and Line Breaks&lt;/h3&gt;

&lt;p&gt;A paragraph is simply one or more consecutive lines of text, separated
by one or more blank lines. (A blank line is any line that looks like a
blank line – a line containing nothing but spaces or tabs is considered
blank.) Normal paragraphs should not be indented with spaces or tabs.&lt;/p&gt;

&lt;p&gt;The implication of the “one or more consecutive lines of text” rule is
that Markdown supports “hard-wrapped” text paragraphs. This differs
significantly from most other text-to-HTML formatters (including Movable
Type’s “Convert Line Breaks” option) which translate every line break
character in a paragraph into a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;When you &lt;em&gt;do&lt;/em&gt; want to insert a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; break tag using Markdown, you
end a line with two or more spaces, then type return.&lt;/p&gt;

&lt;p&gt;Yes, this takes a tad more effort to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;, but a simplistic
“every line break is a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;” rule wouldn’t work for Markdown.
Markdown’s email-style &lt;a href=&quot;#blockquote&quot;&gt;blockquoting&lt;/a&gt; and multi-paragraph &lt;a href=&quot;#list&quot;&gt;list items&lt;/a&gt;
work best – and look better – when you format them with hard breaks.&lt;/p&gt;

&lt;h3 id=&quot;headers&quot;&gt;Headers&lt;/h3&gt;

&lt;p&gt;Markdown supports two styles of headers, &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;Setext&lt;/a&gt; and &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot;&gt;atx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Setext-style headers are “underlined” using equal signs (for first-level
headers) and dashes (for second-level headers). For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is an H1
=============

This is an H2
-------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any number of underlining &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;’s or &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;’s will work.&lt;/p&gt;

&lt;p&gt;Atx-style headers use 1-6 hash characters at the start of the line,
corresponding to header levels 1-6. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is an H1

## This is an H2

###### This is an H6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Optionally, you may “close” atx-style headers. This is purely
cosmetic – you can use this if you think it looks better. The
closing hashes don’t even need to match the number of hashes
used to open the header. (The number of opening hashes
determines the header level.) :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is an H1 #

## This is an H2 ##

### This is an H3 ######
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;p&gt;Markdown uses email-style &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; characters for blockquoting. If you’re
familiar with quoting passages of text in an email message, then you
know how to create a blockquote in Markdown. It looks best if you hard
wrap the text and put a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; before every line:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt; 
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown allows you to be lazy and only put the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; before the first
line of a hard-wrapped paragraph:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by
adding additional levels of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Blockquotes can contain other Markdown elements, including headers, lists,
and code blocks:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt; 
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt; 
&amp;gt; Here&#39;s some example code:
&amp;gt; 
&amp;gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any decent text editor should make email-style quoting easy. For
example, with BBEdit, you can make a selection and choose Increase
Quote Level from the Text menu.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Markdown supports ordered (numbered) and unordered (bulleted) lists.&lt;/p&gt;

&lt;p&gt;Unordered lists use asterisks, pluses, and hyphens – interchangably
– as list markers:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Red
*   Green
*   Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is equivalent to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+   Red
+   Green
+   Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-   Red
-   Green
-   Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ordered lists use numbers followed by periods:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  Bird
2.  McHale
3.  Parish
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s important to note that the actual numbers you use to mark the
list have no effect on the HTML output Markdown produces. The HTML
Markdown produces from the above list is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;McHale&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Parish&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you instead wrote the list in Markdown like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  Bird
1.  McHale
1.  Parish
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or even:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3. Bird
1. McHale
8. Parish
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;you’d get the exact same HTML output. The point is, if you want to,
you can use ordinal numbers in your ordered Markdown lists, so that
the numbers in your source match the numbers in your published HTML.
But if you want to be lazy, you don’t have to.&lt;/p&gt;

&lt;p&gt;If you do use lazy list numbering, however, you should still start the
list with the number 1. At some point in the future, Markdown may support
starting ordered lists at an arbitrary number.&lt;/p&gt;

&lt;p&gt;List markers typically start at the left margin, but may be indented by
up to three spaces. List markers must be followed by one or more spaces
or a tab.&lt;/p&gt;

&lt;p&gt;To make lists look nice, you can wrap items with hanging indents:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But if you want to be lazy, you don’t have to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If list items are separated by blank lines, Markdown will wrap the
items in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in the HTML output. For example, this input:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Bird
*   Magic
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will turn into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Magic&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   Bird

*   Magic
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will turn into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Bird&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Magic&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;List items may consist of multiple paragraphs. Each subsequent
paragraph in a list item must be indented by either 4 spaces
or one tab:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It looks nice if you indent every line of the subsequent
paragraphs, but here again, Markdown will allow you to be
lazy:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To put a blockquote within a list item, the blockquote’s &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;
delimiters need to be indented:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   A list item with a blockquote:

    &amp;gt; This is a blockquote
    &amp;gt; inside a list item.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To put a code block within a list item, the code block needs
to be indented &lt;em&gt;twice&lt;/em&gt; – 8 spaces or two tabs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*   A list item with a code block:

        &amp;lt;code goes here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s worth noting that it’s possible to trigger an ordered list by
accident, by writing something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1986. What a great season.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In other words, a &lt;em&gt;number-period-space&lt;/em&gt; sequence at the beginning of a
line. To avoid this, you can backslash-escape the period:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1986\. What a great season.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;code-blocks&quot;&gt;Code Blocks&lt;/h3&gt;

&lt;p&gt;Pre-formatted code blocks are used for writing about programming or
markup source code. Rather than forming normal paragraphs, the lines
of a code block are interpreted literally. Markdown wraps a code block
in both &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;To produce a code block in Markdown, simply indent every line of the
block by at least 4 spaces or 1 tab. For example, given this input:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is a normal paragraph:

    This is a code block.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown will generate:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is a normal paragraph:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;This is a code block.
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One level of indentation – 4 spaces or 1 tab – is removed from each
line of the code block. For example, this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will turn into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;Here is an example of AppleScript:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;tell application &quot;Foo&quot;
    beep
end tell
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A code block continues until it reaches a line that is not indented
(or the end of the article).&lt;/p&gt;

&lt;p&gt;Within a code block, ampersands (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;) and angle brackets (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;)
are automatically converted into HTML entities. This makes it very
easy to include example HTML source code using Markdown – just paste
it and indent it, and Markdown will handle the hassle of encoding the
ampersands and angle brackets. For example, this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;div class=&quot;footer&quot;&amp;gt;
        &amp;amp;copy; 2004 Foo Corporation
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will turn into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&amp;amp;lt;div class=&quot;footer&quot;&amp;amp;gt;
    &amp;amp;amp;copy; 2004 Foo Corporation
&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Regular Markdown syntax is not processed within code blocks. E.g.,
asterisks are just literal asterisks within a code block. This means
it’s also easy to use Markdown to write about Markdown’s own syntax.&lt;/p&gt;

&lt;h3 id=&quot;horizontal-rules&quot;&gt;Horizontal Rules&lt;/h3&gt;

&lt;p&gt;You can produce a horizontal rule tag (&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;) by placing three or
more hyphens, asterisks, or underscores on a line by themselves. If you
wish, you may use spaces between the hyphens or asterisks. Each of the
following lines will produce a horizontal rule:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;span-elements&quot;&gt;Span Elements&lt;/h2&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;p&gt;Markdown supports two style of links: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In both styles, the link text is delimited by [square brackets].&lt;/p&gt;

&lt;p&gt;To create an inline link, use a set of regular parentheses immediately
after the link text’s closing square bracket. Inside the parentheses,
put the URL where you want the link to point, along with an &lt;em&gt;optional&lt;/em&gt;
title for the link, surrounded in quotes. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Will produce:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is &amp;lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&amp;gt;
an example&amp;lt;/a&amp;gt; inline link.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;a href=&quot;http://example.net/&quot;&amp;gt;This link&amp;lt;/a&amp;gt; has no
title attribute.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you’re referring to a local resource on the same server, you can
use relative paths:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;See my [About](/about/) page for details.   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Reference-style links use a second set of square brackets, inside
which you place a label of your choosing to identify the link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is [an example][id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can optionally use a space to separate the sets of brackets:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is [an example] [id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then, anywhere in the document, you define your link label like this,
on a line by itself:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[id]: http://example.com/  &quot;Optional Title Here&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Square brackets containing the link identifier (optionally
indented from the left margin using up to three spaces);&lt;/li&gt;
  &lt;li&gt;followed by a colon;&lt;/li&gt;
  &lt;li&gt;followed by one or more spaces (or tabs);&lt;/li&gt;
  &lt;li&gt;followed by the URL for the link;&lt;/li&gt;
  &lt;li&gt;optionally followed by a title attribute for the link, enclosed
in double or single quotes, or enclosed in parentheses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following three link definitions are equivalent:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &#39;Optional Title Here&#39;
[foo]: http://example.com/  (Optional Title Here)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is a known bug in Markdown.pl 1.0.1 which prevents
single quotes from being used to delimit link titles.&lt;/p&gt;

&lt;p&gt;The link URL may, optionally, be surrounded by angle brackets:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[id]: &amp;lt;http://example.com/&amp;gt;  &quot;Optional Title Here&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can put the title attribute on the next line and use extra spaces
or tabs for padding, which tends to look better with longer URLs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Link definitions are only used for creating links during Markdown
processing, and are stripped from your document in the HTML output.&lt;/p&gt;

&lt;p&gt;Link definition names may consist of letters, numbers, spaces, and
punctuation – but they are &lt;em&gt;not&lt;/em&gt; case sensitive. E.g. these two
links:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[link text][a]
[link text][A]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;are equivalent.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;implicit link name&lt;/em&gt; shortcut allows you to omit the name of the
link, in which case the link text itself is used as the name.
Just use an empty set of square brackets – e.g., to link the word
“Google” to the google.com web site, you could simply write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Google][]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then define the link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Google]: http://google.com/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Because link names may contain spaces, this shortcut even works for
multiple words in the link text:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Visit [Daring Fireball][] for more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And then define the link:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Daring Fireball]: http://daringfireball.net/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Link definitions can be placed anywhere in your Markdown document. I
tend to put them immediately after each paragraph in which they’re
used, but if you want, you can put them all at the end of your
document, sort of like footnotes.&lt;/p&gt;

&lt;p&gt;Here’s an example of reference links in action:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using the implicit link name shortcut, you could instead write:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Both of the above examples will produce the following HTML output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;I get 10 times more traffic from &amp;lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&amp;gt;Google&amp;lt;/a&amp;gt; than from
&amp;lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&amp;gt;Yahoo&amp;lt;/a&amp;gt;
or &amp;lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&amp;gt;MSN&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For comparison, here is the same paragraph written using
Markdown’s inline link style:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The point of reference-style links is not that they’re easier to
write. The point is that with reference-style links, your document
source is vastly more readable. Compare the above examples: using
reference-style links, the paragraph itself is only 81 characters
long; with inline-style links, it’s 176 characters; and as raw HTML,
it’s 234 characters. In the raw HTML, there’s more markup than there
is text.&lt;/p&gt;

&lt;p&gt;With Markdown’s reference-style links, a source document much more
closely resembles the final output, as rendered in a browser. By
allowing you to move the markup-related metadata out of the paragraph,
you can add links without interrupting the narrative flow of your
prose.&lt;/p&gt;

&lt;h3 id=&quot;emphasis&quot;&gt;Emphasis&lt;/h3&gt;

&lt;p&gt;Markdown treats asterisks (&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;) and underscores (&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;) as indicators of
emphasis. Text wrapped with one &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; will be wrapped with an
HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag; double &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;’s or &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;’s will be wrapped with an HTML
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. E.g., this input:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will produce:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;em&amp;gt;single asterisks&amp;lt;/em&amp;gt;

&amp;lt;em&amp;gt;single underscores&amp;lt;/em&amp;gt;

&amp;lt;strong&amp;gt;double asterisks&amp;lt;/strong&amp;gt;

&amp;lt;strong&amp;gt;double underscores&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can use whichever style you prefer; the lone restriction is that
the same character must be used to open and close an emphasis span.&lt;/p&gt;

&lt;p&gt;Emphasis can be used in the middle of a word:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;un*frigging*believable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But if you surround an &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; with spaces, it’ll be treated as a
literal asterisk or underscore.&lt;/p&gt;

&lt;p&gt;To produce a literal asterisk or underscore at a position where it
would otherwise be used as an emphasis delimiter, you can backslash
escape it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\*this text is surrounded by literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;To indicate a span of code, wrap it with backtick quotes (&lt;code class=&quot;highlighter-rouge&quot;&gt;`&lt;/code&gt;).
Unlike a pre-formatted code block, a code span indicates code within a
normal paragraph. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Use the `printf()` function.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will produce:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;Use the &amp;lt;code&amp;gt;printf()&amp;lt;/code&amp;gt; function.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To include a literal backtick character within a code span, you can use
multiple backticks as the opening and closing delimiters:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;``There is a literal backtick (`) here.``
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which will produce this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;There is a literal backtick (`) here.&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The backtick delimiters surrounding a code span may include spaces –
one after the opening, one before the closing. This allows you to place
literal backtick characters at the beginning or end of a code span:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will produce:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;A single backtick in a code span: &amp;lt;code&amp;gt;`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;A backtick-delimited string in a code span: &amp;lt;code&amp;gt;`foo`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With a code span, ampersands and angle brackets are encoded as HTML
entities automatically, which makes it easy to include example HTML
tags. Markdown will turn this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Please don&#39;t use any `&amp;lt;blink&amp;gt;` tags.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;Please don&#39;t use any &amp;lt;code&amp;gt;&amp;amp;lt;blink&amp;amp;gt;&amp;lt;/code&amp;gt; tags.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can write this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`&amp;amp;#8212;` is the decimal-encoded equivalent of `&amp;amp;mdash;`.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to produce:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;&amp;amp;amp;#8212;&amp;lt;/code&amp;gt; is the decimal-encoded
equivalent of &amp;lt;code&amp;gt;&amp;amp;amp;mdash;&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;

&lt;p&gt;Admittedly, it’s fairly difficult to devise a “natural” syntax for
placing images into a plain text document format.&lt;/p&gt;

&lt;p&gt;Markdown uses an image syntax that is intended to resemble the syntax
for links, allowing for two styles: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Inline image syntax looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An exclamation mark: &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;followed by a set of square brackets, containing the &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt;
attribute text for the image;&lt;/li&gt;
  &lt;li&gt;followed by a set of parentheses, containing the URL or path to
the image, and an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute enclosed in double
or single quotes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reference-style image syntax looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Alt text][id]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Where “id” is the name of a defined image reference. Image references
are defined using syntax identical to link references:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[id]: url/to/image  &quot;Optional title attribute&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As of this writing, Markdown has no syntax for specifying the
dimensions of an image; if this is important to you, you can simply
use regular HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h2&gt;

&lt;h3 id=&quot;utomatic-links&quot;&gt;utomatic Links&lt;/h3&gt;

&lt;p&gt;Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;http://example.com/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown will turn this into:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;http://example.com/&quot;&amp;gt;http://example.com/&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Automatic links for email addresses work similarly, except that
Markdown will also perform a bit of randomized decimal and hex
entity-encoding to help obscure your address from address-harvesting
spambots. For example, Markdown will turn this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;address@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;into something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;
&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;
&amp;amp;#109;&quot;&amp;gt;&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;
&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&amp;amp;#109;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which will render in a browser as a clickable link to “address@example.com”.&lt;/p&gt;

&lt;p&gt;(This sort of entity-encoding trick will indeed fool many, if not
most, address-harvesting bots, but it definitely won’t fool all of
them. It’s better than nothing, but an address published in this way
will probably eventually start receiving spam.)&lt;/p&gt;

&lt;h3 id=&quot;backslash-escapes&quot;&gt;Backslash Escapes&lt;/h3&gt;

&lt;p&gt;Markdown allows you to use backslash escapes to generate literal
characters which would otherwise have special meaning in Markdown’s
formatting syntax. For example, if you wanted to surround a word
with literal asterisks (instead of an HTML &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag), you can use
backslashes before the asterisks, like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\*literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Markdown provides backslash escapes for the following characters:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+	plus sign
-	minus sign (hyphen)
.   dot
!   exclamation mark
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 20 Dec 2015 21:45:48 +0000</pubDate>
        <link>kalciferkandari.github.io/articles/2015/12/20/markdown-test.html</link>
        <guid isPermaLink="true">kalciferkandari.github.io/articles/2015/12/20/markdown-test.html</guid>
        
        
      </item>
    
  </channel>
</rss>
